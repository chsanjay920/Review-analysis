{"ast":null,"code":"import _asyncToGenerator from \"D:/github/Review-analysis/review analysis/BackendProject/frontend-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/APIs\";\nimport * as i2 from \"@angular/common\";\n\nfunction IdeasfeedComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"a\", 5)(2, \"div\", 6)(3, \"h5\", 7);\n    i0.ɵɵtext(4, \"List group item heading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"small\");\n    i0.ɵɵtext(6, \"3 days ago\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"p\", 7);\n    i0.ɵɵtext(8, \"Some placeholder content in a paragraph.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"small\");\n    i0.ɵɵtext(10, \"And some small print.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction IdeasfeedComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, IdeasfeedComponent_div_1_div_1_Template, 11, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.FeedData.QueryCategory == ctx_r0.TypeModel.food);\n  }\n}\n\nexport class IdeasfeedComponent {\n  constructor(formdataservice) {\n    this.formdataservice = formdataservice;\n    this.TypeModel = {\n      food: \"Food\",\n      generalproblem: \"GeneralProblems\",\n      movies: \"Movies\",\n      politics: \"Politics\",\n      startups: \"StartUps\",\n      technology: \"Technology\",\n      universities: \"Universities\"\n    };\n    this.FeedData = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.LoadFeedData();\n      console.log(_this.FeedData);\n    })();\n  }\n\n  LoadFeedData() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.formdataservice.getFeedData().subscribe(Response => {\n        _this2.FeedData = Response;\n        console.log(_this2.FeedData);\n      });\n    })();\n  }\n\n}\n\nIdeasfeedComponent.ɵfac = function IdeasfeedComponent_Factory(t) {\n  return new (t || IdeasfeedComponent)(i0.ɵɵdirectiveInject(i1.Client));\n};\n\nIdeasfeedComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IdeasfeedComponent,\n  selectors: [[\"app-ideasfeed\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[\"id\", \"feedComponent\", 1, \"list-group\"], [\"class\", \"content\", 4, \"ngFor\", \"ngForOf\"], [1, \"content\"], [\"class\", \"food\", 4, \"ngIf\"], [1, \"food\"], [\"href\", \"#\", 1, \"list-group-item\", \"list-group-item-action\"], [1, \"d-flex\", \"w-100\", \"justify-content-between\"], [1, \"mb-1\"]],\n  template: function IdeasfeedComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, IdeasfeedComponent_div_1_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.FeedData);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"#feedComponent[_ngcontent-%COMP%]{\\r\\n    margin: 50px 200px;\\r\\n    height: 800px;\\r\\n    border: 1px solid rgb(198, 197, 197);\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlkZWFzZmVlZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixvQ0FBb0M7QUFDeEMiLCJmaWxlIjoiaWRlYXNmZWVkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjZmVlZENvbXBvbmVudHtcclxuICAgIG1hcmdpbjogNTBweCAyMDBweDtcclxuICAgIGhlaWdodDogODAwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2IoMTk4LCAxOTcsIDE5Nyk7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAEIA,+BAAmE,CAAnE,EAAmE,GAAnE,EAAmE,CAAnE,EAAmE,CAAnE,EAAmE,KAAnE,EAAmE,CAAnE,EAAmE,CAAnE,EAAmE,IAAnE,EAAmE,CAAnE;IAGuBA;IAAuBA;IACxCA;IAAOA;IAAUA;IAEnBA;IAAgBA;IAAwCA;IACxDA;IAAOA;IAAqBA;;;;;;IARlCA;IACEA;IAUFA;;;;;IAVqBA;IAAAA;;;;ACMvB,OAAM,MAAOC,kBAAP,CAAyB;EAC7BC,YAAoBC,eAApB,EAA2C;IAAvB;IACb,iBAAgB;MACrBC,IAAI,EAAC,MADgB;MAErBC,cAAc,EAAC,iBAFM;MAGrBC,MAAM,EAAC,QAHc;MAIrBC,QAAQ,EAAC,UAJY;MAKrBC,QAAQ,EAAC,UALY;MAMrBC,UAAU,EAAC,YANU;MAOrBC,YAAY,EAAC;IAPQ,CAAhB;IASA,gBAAgB,EAAhB;EAVwC;;EAWzCC,QAAQ;IAAA;;IAAA;MACZ,MAAM,KAAI,CAACC,YAAL,EAAN;MACAC,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,QAAjB;IAFY;EAGb;;EAEKH,YAAY;IAAA;;IAAA;MAChB,MAAI,CAACT,eAAL,CAAqBa,WAArB,GAAmCC,SAAnC,CAA8CC,QAAD,IAAa;QACxD,MAAI,CAACH,QAAL,GAAgBG,QAAhB;QACAL,OAAO,CAACC,GAAR,CAAY,MAAI,CAACC,QAAjB;MACD,CAHD;IADgB;EAKjB;;AAtB4B;;;mBAAlBd,oBAAkBD;AAAA;;;QAAlBC;EAAkBkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR/BvB;MACEA;MAaFA;;;;MAbwCA;MAAAA","names":["i0","IdeasfeedComponent","constructor","formdataservice","food","generalproblem","movies","politics","startups","technology","universities","ngOnInit","LoadFeedData","console","log","FeedData","getFeedData","subscribe","Response","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\github\\Review-analysis\\review analysis\\BackendProject\\frontend-project\\src\\app\\Components\\ideasfeed\\ideasfeed.component.html","D:\\github\\Review-analysis\\review analysis\\BackendProject\\frontend-project\\src\\app\\Components\\ideasfeed\\ideasfeed.component.ts"],"sourcesContent":["<div class=\"list-group\" id=\"feedComponent\">\n  <div class=\"content\" *ngFor=\"let data of FeedData\">\n    <div class=\"food\" *ngIf=\"FeedData.QueryCategory == TypeModel.food\"> \n      <a href=\"#\" class=\"list-group-item list-group-item-action\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <h5 class=\"mb-1\">List group item heading</h5>\n          <small>3 days ago</small>\n        </div>\n        <p class=\"mb-1\">Some placeholder content in a paragraph.</p>\n        <small>And some small print.</small>\n      </a>\n    </div>\n  </div>\n   \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Client } from 'src/app/APIs';\n\n@Component({\n  selector: 'app-ideasfeed',\n  templateUrl: './ideasfeed.component.html',\n  styleUrls: ['./ideasfeed.component.css'],\n})\nexport class IdeasfeedComponent implements OnInit {\n  constructor(private formdataservice: Client) {}\n  public TypeModel:any = {\n    food:\"Food\",\n    generalproblem:\"GeneralProblems\",\n    movies:\"Movies\",\n    politics:\"Politics\",\n    startups:\"StartUps\",\n    technology:\"Technology\",\n    universities:\"Universities\"\n  }\n  public FeedData: any = [];\n  async ngOnInit(): Promise<void> {\n    await this.LoadFeedData();\n    console.log(this.FeedData);\n  }\n\n  async LoadFeedData() {\n    this.formdataservice.getFeedData().subscribe((Response) => {\n      this.FeedData = Response;\n      console.log(this.FeedData);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}